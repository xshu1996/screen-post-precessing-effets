// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        uSpeed: { value: 1.0 }
        uIntension: { value: 0.1 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;

  #include <texture>
  #include <cc-global>

  in vec4 v_color;

  in vec2 v_uv0;
  uniform sampler2D texture;

  uniform Constant {
		float uSpeed;
    float uIntension;
	};

  void main () {
    float h = 1.0 - v_uv0.y;
    float r_h = smoothstep(h, 0.0, 0.15) * h;
    float rate = uIntension * pow(r_h, 2.);
    float offset = rate * sin(cc_time.x * uSpeed);
    float offsetY = abs(offset);
    float v_u = v_uv0.x + offset;
    float v_v = v_uv0.y - offsetY;
    if (v_u < 0.0 || v_u > 1.0 || v_v < 0.0 || v_v > 1.0) {
      gl_FragColor = vec4(1.0);
    } else {
      gl_FragColor = texture(texture, vec2(v_u, v_v));
    }
  }
}%
