{
  "ver": "1.0.27",
  "uuid": "f32d42b4-9a13-485c-92df-eb04c00a916b",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_uv0;\nattribute vec2 a_uv1;\nattribute vec2 a_uv2;\nattribute vec2 a_uv3;\nvarying vec2 v_uv0;\nvarying vec2 v_uv1;\nvarying vec2 v_uv2;\nvarying vec2 v_uv3;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_uv1 = a_uv1;\n  v_uv2 = a_uv2;\n  v_uv3 = a_uv3;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform vec4 cc_time;\nvarying vec2 v_uv0;\nvarying vec2 v_uv1;\nvarying vec2 v_uv2;\nvarying vec2 v_uv3;\nuniform sampler2D texture;\nvoid main()\n{\n  vec2 uv = v_uv0.xy;\n  float tx = cc_time.x * v_uv1.x;\n  float ty = cc_time.x * v_uv1.y;\n  vec2 xpq = v_uv2.xy;\n  vec2 ypq = v_uv3.xy;\n  uv.x = uv.x * xpq.x + xpq.y;\n  uv.y = uv.y * ypq.x + ypq.y;\n  uv.x = fract(uv.x - tx);\n  uv.y = fract(uv.y - ty);\n  uv.x = (uv.x - xpq.y) / xpq.x;\n  uv.y = (uv.y - ypq.y) / ypq.x;\n  vec4 col = texture2D(texture, uv);\n  gl_FragColor = col;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec2 a_uv0;\nin vec2 a_uv1;\nin vec2 a_uv2;\nin vec2 a_uv3;\nout vec2 v_uv0;\nout vec2 v_uv1;\nout vec2 v_uv2;\nout vec2 v_uv3;\nvoid main() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_uv1 = a_uv1;\n  v_uv2 = a_uv2;\n  v_uv3 = a_uv3;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec2 v_uv0;\nin vec2 v_uv1;\nin vec2 v_uv2;\nin vec2 v_uv3;\nuniform sampler2D texture;\nvoid main()\n{\n  vec2 uv = v_uv0.xy;\n  float tx = cc_time.x * v_uv1.x;\n  float ty = cc_time.x * v_uv1.y;\n  vec2 xpq = v_uv2.xy;\n  vec2 ypq = v_uv3.xy;\n  uv.x = uv.x * xpq.x + xpq.y;\n  uv.y = uv.y * ypq.x + ypq.y;\n  uv.x = fract(uv.x - tx);\n  uv.y = fract(uv.y - ty);\n  uv.x = (uv.x - xpq.y) / xpq.x;\n  uv.y = (uv.y - ypq.y) / ypq.x;\n  vec4 col = texture(texture, uv);\n  gl_FragColor = col;\n}"
      }
    }
  ],
  "subMetas": {}
}